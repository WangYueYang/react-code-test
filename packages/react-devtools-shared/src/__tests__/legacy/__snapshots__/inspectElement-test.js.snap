// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InspectedElementContext should inspect the currently selected element: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "a": 1,
    "b": "abc"
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should not consume iterables while inspecting: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "iteratable": {}
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should not dehydrate nested values until explicitly requested: 1: Initially inspect element 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "nestedObject": {
      "a": {}
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should not dehydrate nested values until explicitly requested: 2: Inspect props.nestedObject.a 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "nestedObject": {
      "a": {
        "b": {
          "c": {}
        }
      }
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should not dehydrate nested values until explicitly requested: 3: Inspect props.nestedObject.a.b.c 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "nestedObject": {
      "a": {
        "b": {
          "c": [
            {
              "d": {}
            }
          ]
        }
      }
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should not dehydrate nested values until explicitly requested: 4: Inspect props.nestedObject.a.b.c.0.d 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "nestedObject": {
      "a": {
        "b": {
          "c": [
            {
              "d": {
                "e": {}
              }
            }
          ]
        }
      }
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should support complex data types: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "anonymous_fn": {},
    "array_buffer": {},
    "array_of_arrays": [
      {}
    ],
    "big_int": {},
    "bound_fn": {},
    "data_view": {},
    "date": {},
    "fn": {},
    "html_element": {},
    "immutable": {
      "0": {},
      "1": {},
      "2": {}
    },
    "map": {
      "0": {},
      "1": {}
    },
    "map_of_maps": {
      "0": {},
      "1": {}
    },
    "object_of_objects": {
      "inner": {}
    },
    "react_element": {},
    "regexp": {},
    "set": {
      "0": "abc",
      "1": 123
    },
    "set_of_sets": {
      "0": {},
      "1": {}
    },
    "symbol": {},
    "typed_array": {
      "0": 100,
      "1": -100,
      "2": 0
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should support custom objects with enumerable properties and getters: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "data": {
      "_number": 42,
      "number": 42
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should support objects with no prototype: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "object": {
      "string": "abc",
      "number": 123,
      "boolean": true
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should support objects with overridden hasOwnProperty: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "object": {
      "name": "blah",
      "hasOwnProperty": true
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should support objects with with inherited keys: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "data": {
      "123": 3,
      "enumerableString": 2,
      "Symbol(enumerableSymbol)": 3,
      "enumerableStringBase": 1,
      "Symbol(enumerableSymbolBase)": 1
    }
  },
  "state": null
},
}
`;

exports[`InspectedElementContext should support simple data types: 1: Initial inspection 1`] = `
Object {
  "id": 2,
  "type": "full-data",
  "value": {
  "id": 2,
  "owners": null,
  "context": {},
  "hooks": null,
  "props": {
    "boolean_false": false,
    "boolean_true": true,
    "infinity": null,
    "integer_zero": 0,
    "integer_one": 1,
    "float": 1.23,
    "string": "abc",
    "string_empty": "",
    "nan": null,
    "value_null": null
  },
  "state": null
},
}
`;
